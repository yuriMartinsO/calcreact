{"version":3,"sources":["Botao.js","SinaisContainer.js","CalculadoraContainer.js","Visor.js","BotoesContainer.js","App.js","serviceWorker.js","index.js"],"names":["Botao","valor","this","props","funcao","acao","className","onClick","React","Component","SinaisContainer","sinais","array","map","key","botoes","exibirBotoes","CalculadoraContainer","state","caracter","setState","substring","length","resultado","eval","error","alert","apagarUmCaracter","apagarTudo","calcular","acrescentar","dados","fileira1Sinais","fileira2Sinais","numeros","fazerUmaAcao","bind","Visor","BotoesContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7af98117.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Botao extends React.Component {\r\n\r\n    render() {\r\n        const valor = this.props.valor;\r\n        const funcao = this.props.acao;\r\n\r\n\t\treturn (\r\n            <div className=\"botao\" onClick={()=>funcao(valor)}>\r\n                <div>{this.props.valor}</div>\r\n            </div>\r\n        );\r\n\t}\r\n}\r\n\r\nexport default Botao;","import React from 'react';\r\nimport Botao from './Botao.js';\r\n\r\nclass SinaisContainer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.sinais = this.props.sinais;\r\n\t}\r\n\r\n\texibirBotoes(array) {\r\n\t\tlet lista = array.map((valor) =>\r\n\t\t\t<Botao acao={this.props.acao} key={valor} valor={valor}/>\r\n\t\t);\r\n\t\treturn lista;\r\n\t}    \r\n\trender() {\r\n\t\tconst botoes= this.exibirBotoes(this.sinais);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{botoes}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SinaisContainer;","import React from 'react';\r\nimport Visor from './Visor.js';\r\nimport SinaisContainer from './SinaisContainer.js';\r\nimport BotoesContainer from './BotoesContainer.js';\r\n\r\nclass CalculadoraContainer extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tvalor: \"\",\r\n\t\t}\r\n\t}\r\n\r\n\tacrescentar(caracter) {\r\n\t\tthis.setState({\r\n\t\t\tvalor: this.state.valor + caracter,\r\n\t\t});\r\n\t}\r\n\r\n\tapagarUmCaracter() {\r\n\t\tthis.setState({\r\n\t\t\tvalor: this.state.valor.substring(0,(this.state.valor.length-1)),\r\n\t\t});\r\n\t}\r\n\r\n\tapagarTudo() {\r\n\t\tthis.setState({\r\n\t\t\tvalor: \"\",\r\n\t\t});\r\n\t}\r\n\r\n\tcalcular() {\r\n\t\ttry{\r\n\t\t\tlet resultado = eval(this.state.valor);\r\n\t\t\t this.setState({\r\n\t\t\t\tvalor: resultado,\r\n\t\t\t});\r\n\t\t}\r\n\t\t  catch(error){\r\n\t\t\talert(\"CONTA INVALIDA\");\r\n\t\t}\r\n\t}\r\n\t//REGISTRA UMA AÇÃO PARA CALCULAR\r\n\tfazerUmaAcao(caracter) {\r\n\t\tswitch(caracter){\r\n\t\t\tcase '<':\r\n\t\t\t\tthis.apagarUmCaracter();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'C':\r\n\t\t\t\tthis.apagarTudo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase '=':\r\n\t\t\t\tthis.calcular();\r\n\t\t\t\tbreak;\t\r\n\t\t\tdefault:\r\n\t\t\t\tthis.acrescentar(caracter);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst dados = {\r\n\t\t\tfileira1Sinais: [\r\n\t\t\t\t'.',\r\n\t\t\t\t'C',\r\n\t\t\t\t'<',\r\n\t\t\t\t'/'\r\n\t\t\t],\r\n\t\t\tfileira2Sinais: [\r\n\t\t\t\t'*',\r\n\t\t\t\t'-',\r\n\t\t\t\t'+',\r\n\t\t\t\t'='\r\n\t\t\t],\r\n\t\t\tnumeros: [1,2,3,4,5,6,7,8,9,'(',0,')']\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"calculadoraContainer\">\r\n\t\t\t\t<Visor valor={this.state.valor}/>\r\n\t\t\t\t<div className=\"fileiraSinais1\">\r\n\t\t\t\t\t<SinaisContainer sinais={dados.fileira1Sinais} acao={this.fazerUmaAcao.bind(this)}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"numeros\">\r\n\t\t\t\t\t<BotoesContainer numeros={dados.numeros} acao={this.fazerUmaAcao.bind(this)}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"fileiraSinais2\">\r\n\t\t\t\t\t<SinaisContainer sinais={dados.fileira2Sinais} acao={this.fazerUmaAcao.bind(this)}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CalculadoraContainer;","import React from 'react';\r\n\r\nclass Visor extends React.Component {\r\n\r\n    render() {\r\n\t\treturn (\r\n            <div className=\"visor\">\r\n                <h2>{this.props.valor}</h2>\r\n            </div>\r\n        );\r\n\t}\r\n}\r\n\r\nexport default Visor;","import React from 'react';\r\nimport Botao from './Botao.js';\r\n\r\nclass BotoesContainer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.numeros = this.props.numeros;\r\n\t}\r\n\r\n\texibirBotoes(array) {\r\n\t\tlet lista = array.map((valor) =>\r\n\t\t\t<Botao acao={this.props.acao} key={valor} valor={valor}/>\r\n\t\t);\r\n\t\treturn lista;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst botoes= this.exibirBotoes(this.numeros);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{botoes}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BotoesContainer;","import React from 'react';\r\nimport './App.css';\r\nimport CalculadoraContainer from './CalculadoraContainer.js';\r\n\r\nclass App extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn <CalculadoraContainer />\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}